@model SaveBBService.DataObjects.AlertItem

@{
    ViewBag.Title = "Simulate Flip the Baby";
}

<h2>Simulate Flip the Baby</h2>

<hr />

<div class="row">
    <div class="col-sm-9 col-md-7">

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h4>AlertItem</h4>*@

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
                @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AlertTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AlertTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AlertTime, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.AlertValue, "Position", htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-8">
                @Html.LabelFor(x => x, "Face Up", new { htmlAttributes = new { @class = "form-control radio-inline" } })
                @Html.RadioButtonFor(model => model.AlertValue, "0", new { @checked = "checked" })
                <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>
                @Html.LabelFor(x => x, "Face Down", new { htmlAttributes = new { @class = "form-control radio-inline" } })
                @Html.RadioButtonFor(model => model.AlertValue, "-1", new { htmlAttributes = new { @class = "form-control" } })

                @*@Html.EditorFor(model => model.AlertValue, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AlertValue, "", new { @class = "text-danger" })*@
            </div>
            <div class="col-md-4"> </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.AlertType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AlertType, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AlertType, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-2">
            </div>
            <div class="col-md-10">
                <div class="alert alert-danger">
                    <strong>Texting costs $. &nbsp; Please do not abuse!</strong>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.PhoneNum, new { htmlAttributes = new { @class = "form-control", placeholder = "e.g. 16501234567", type = "tel" } })
                @Html.ValidationMessageFor(model => model.PhoneNum, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Humidity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Humidity, new { htmlAttributes = new { @class = "form-control", placeholder = "e.g. 50" } })
                @Html.ValidationMessageFor(model => model.Humidity, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Temp, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Temp, new { htmlAttributes = new { @class = "form-control", placeholder = "e.g. 70" } })
                @Html.ValidationMessageFor(model => model.Temp, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HeartRate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.HeartRate, new { htmlAttributes = new { @class = "form-control", placeholder = "e.g. 80" } })
                @Html.ValidationMessageFor(model => model.HeartRate, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.Deleted, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Deleted)
                        @Html.ValidationMessageFor(model => model.Deleted, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Flip" class="btn btn-primary btn-lg" /> &nbsp;
                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-default btn-lg" })
            </div>
        </div>
    </div>
}


    </div>
    <div class="col-sm-3 col-md-5">
        <img src="~/Images/wemos.png" class="img-responsive"  />
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
